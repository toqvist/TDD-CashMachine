/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cashmachine;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;


class AppTest {

    CashMachine cm;
    Hardware hw;
    Bank bank;

    @BeforeEach
    public void setUp() {
        cm = new CashMachine();
        hw = mock(Hardware.class);
        bank = mock(Bank.class);
    }
    //Cash machine
    // Checks with bank if card is locked
    @Test void machineCanCheckIfCardLocked () {
        
       when(hw.getCardID()).thenReturn("123451234");

       //when(bank.validateCard(hw.getCardID(), "1234").thenReturn(true));

        
    }

    // Can check balance from bank account

    // Can withdraw money

    // Verify that withdraw function on bank is run
    // Can deposit money

    // Verify that deposit function on bank is run
    // Can exit process

    // Machine verifies which bank it's connected to

    
    //Mock bank machine hardware API
        //Mock the card-reader
            // Get and ID from the card reader, identifying user
            // Mock card-inserted sensor
    
        //Use terminal as pin-pad

        // Cash handler
            // Take money
            // Withdraw money

    
    //Mock the bank backend
        // Login user using ID + PIN
        // Track login attempts
        // Login attempts >= 3 locks the card 
        // Bank can give successful attempts left
        // Successful login returns authentication token
        // Auth-token verification is mocked
        // Can get bank account balance
        // Check if enough money in account, authourize withdrawal, decrement

    
}
